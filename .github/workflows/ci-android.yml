name: Android CI (OpenSSL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android (arm64-v8a + OpenSSL)
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK packages
        shell: bash
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "cmake;3.22.1"
          # Accept licenses; suppress Broken pipe when nothing to accept
          yes | sdkmanager --licenses > /dev/null || true

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y perl rsync curl

      - name: Install NDK 29.0.13846066
        run: |
          sdkmanager --install "ndk;29.0.13846066"
          # Accept any pending licenses just in case
          yes | sdkmanager --licenses > /dev/null || true

      - name: Export NDK env vars
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/29.0.13846066" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/29.0.13846066" >> $GITHUB_ENV

      - name: Show Android env
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "ANDROID_HOME=$ANDROID_HOME"
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME"
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT"

      - name: Make scripts executable
        run: |
          chmod +x ./gradlew || true
          chmod +x ./build_openssl.sh

      - name: Build OpenSSL prebuilts (arm64-v8a)
        run: |
          ./build_openssl.sh --abis "arm64-v8a"

      - name: Gradle build (assembleDebug)
        uses: gradle/gradle-build-action@v3
        with:
          arguments: :app:assembleDebug --no-daemon --stacktrace

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
